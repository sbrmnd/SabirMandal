<Window 
    x:Name="MyWindow"
    x:Class="WpfAppTutorial.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfAppTutorial"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--This resources can be used within the window, to make it application wide put the resource to app.xaml-->
    <Window.Resources>
        <!--<SolidColorBrush Color="Red" x:Key="RedBrush"/>
        <SolidColorBrush Color="Blue" x:Key="BlueBrush"/>-->

        <!--Styles-->

        <!--If we have not style dont have key then it is call implesit, it will applied to all the Target
        type
        Explisit Style: with x:key
        
        Styles can be applied to app.xaml
        -->
        <Style TargetType="Button" x:Key="MyStyle">
            <Setter Property="Background" Value="Aquamarine"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style BasedOn="{StaticResource MyStyle}" TargetType="Button" x:Key="MyStyle2">
            <!--Below two sytles are same as style, use style inhertance
            Take out the common sytles in one and drived it in other style
            grand child also can be created.
            -->

            <!--<Setter Property="Background" Value="Aquamarine"/>
            <Setter Property="Foreground" Value="Black"/>-->
            <Setter Property="FontWeight" Value="ExtraBold"/>
        </Style>

    </Window.Resources>
    <!--<Grid>
        --><!--Grid level resources-->
        <!--<Grid.Resources>
            <SolidColorBrush Color="Red" x:Key="RedBrush"/>
            <SolidColorBrush Color="Blue" x:Key="BlueBrush"/>
        </Grid.Resources>-->

        <!--<Button Content="MyButton" Background="{DynamicResource DynamicResource}"  Margin="43,122,501,179"/>--><!--

        <Button Content="MyButton" Style="{StaticResource MyStyle}" Margin="10,15,534.2,343.8"/>
        <Button Content="BlueColourButton" Style="{StaticResource MyStyle2}" Margin="376,12,167.2,343.8" Click="Button_Click"/>
        <Button Content="RedColourButton" Margin="376,120,167.2,235.8" Click="Button_Click_1"/>
        
        --><!--Triggers-->
    <!--
        <Button Content="Learn Trigger Mouse hover" Margin="29,212,459.2,136.8">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="Blue"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                            <Setter Property="FontWeight" Value="ExtraBold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                
            </Button.Style>
        </Button>


    </Grid>-->
    <!--Stack the control in vertically or horizontically just like 
    stack of books-->
    <!--<StackPanel Orientation="Vertical">
        <Label Name="Lable" Content="label control"></Label>
        <TextBlock Name="TB"> textblock</TextBlock>
        <CheckBox Name="checkbox1">checkbox1</CheckBox>
        <CheckBox Name="checkbox2">checkbox2</CheckBox>
        <CheckBox Name="checkbox3">checkbox3</CheckBox>

        <ListBox Name="List1">
            <ListBoxItem>Item 1</ListBoxItem>
            <ListBoxItem>Item 2</ListBoxItem>
        </ListBox>
        <ListBox Name="List2">
            <ListBoxItem>Item 1</ListBoxItem>
            <ListBoxItem>Item 2</ListBoxItem>
        </ListBox>
        <Button Content="click" Width="120" Height="40"></Button>
    </StackPanel>-->

    <!--<Canvas Background="Green">
        <Label Canvas.Top="30" Canvas.Left="20">Enter Here</Label>
        <TextBox Canvas.Top="30" Canvas.Left="120" Width="120"></TextBox>
        <Button Canvas.Top="70" Canvas.Left="120" Height="30" Width="100" Content="Click Me"></Button>
    </Canvas>-->

    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="28"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        
        --><!--Place the controls here.--><!--
        <Label Grid.Row="0" Grid.Column="0" Content="First Name"/>
        <Label Grid.Row="1" Grid.Column="0" Content="Last Name"/>
        <Label Grid.Row="2" Grid.Column="0" Content="Address"/>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="3"/>
        <TextBox Grid.Row="1" Grid.Column="1" Margin="3"/>
        <TextBox Grid.Row="2" Grid.Column="1" Margin="3"/>
        <Button Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right" MinWidth="80" Margin="3"
                Content="Submit"/>
    </Grid>-->

    <Grid>
        <!--Customer Dependency Property-->
        <Viewbox>
            <TextBlock Text="{Binding ElementName=MyWindow, Path=Counter}"/>
        </Viewbox>
    </Grid>
    
    
</Window>
